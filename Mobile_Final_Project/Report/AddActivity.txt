package com.example.phonebook;

import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.example.phonebook.data.ContactContract.ContactEntry;
import com.example.phonebook.data.ContactDbHelper;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.InputStream;

public class AddActivity extends AppCompatActivity {
    private ContactDbHelper mDbHelper;
    private Toast toast;
    private static final int SELECT_PHOTO = 100;
    private static final int CAPTURE_PHOTO = 101;
    String path;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add);

        mDbHelper = new ContactDbHelper(this);

        toast = Toast.makeText(getApplicationContext(), null, Toast.LENGTH_SHORT);

        Button confirmAdd = (Button) findViewById(R.id.add_confirm);
        Button addImage = (Button) findViewById(R.id.add_image);
        Button captureImage = (Button) findViewById(R.id.capture_image);

        captureImage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                startActivityForResult(cameraIntent, CAPTURE_PHOTO);
            }
        });

        addImage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
                photoPickerIntent.setType("image/*");
                startActivityForResult(photoPickerIntent, SELECT_PHOTO);
            }
        });
        confirmAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                insertContact();
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        switch(requestCode) {
            case SELECT_PHOTO:
                if(resultCode == RESULT_OK){
                    //Take uri of image from gallery.
                    Uri selectedImage = data.getData();
                    //Convert uri of that image to string which is path to that image.
                    path = selectedImage.toString();
                    try {
                        Toast.makeText(this, "Success!", Toast.LENGTH_SHORT).show();
                    } catch (Exception e) {
                        Toast.makeText(this, "Error", Toast.LENGTH_SHORT).show();
                    }
                }
                break;
            case CAPTURE_PHOTO:
                if(resultCode == RESULT_OK){
                    //Take uri of image taken from camera.
                    Uri selectedImage = data.getData();
                    ///Convert uri of that image to string which is path to that image.
                    path = selectedImage.toString();
                    try {
                        Toast.makeText(this, "Success!", Toast.LENGTH_SHORT).show();
                    } catch (Exception e) {
                        Toast.makeText(this, "Error", Toast.LENGTH_SHORT).show();
                    }
                }
        }
    }

    private void insertContact() {
        EditText firstText = (EditText) findViewById(R.id.add_name);
        EditText surnameText = (EditText) findViewById(R.id.add_surname);
        EditText numberText = (EditText) findViewById(R.id.add_number);

        String first = firstText.getText().toString().trim();
        String surname = surnameText.getText().toString().trim();
        String number = numberText.getText().toString().trim();

        if (TextUtils.isEmpty(first) || first.equals(" ")) {
            toast.setText("Name field must not be empty.");
            toast.show();
            return;
        }
        if (TextUtils.isEmpty(surname) || surname.equals(" ")) {
            toast.setText("Last name field must not be empty.");
            toast.show();
            return;
        }
        if (number.length() == 0) {
            toast.setText("Number field must not be empty.");
            toast.show();
            return;
        }

        SQLiteDatabase db = mDbHelper.getWritableDatabase();

        ContentValues values = new ContentValues();

        values.put(ContactEntry.CONTACT_NAME, first);
        values.put(ContactEntry.CONTACT_SURNAME, surname);
        values.put(ContactEntry.CONTACT_NUMBER, number);
        values.put(ContactEntry.CONTACT_IMAGE, path);
        
        long newRowId = db.insert(ContactEntry.TABLE_NAME, null, values);

        if(newRowId == -1) {
            Toast.makeText(this, "Error saving contact!", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Contact saved succesfully!", Toast.LENGTH_SHORT).show();
            Intent intent = new Intent(AddActivity.this, ViewActivity.class);
            startActivity(intent);
        }
    }
}